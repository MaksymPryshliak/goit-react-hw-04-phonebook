{"ast":null,"code":"var _jsxFileName = \"D:\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = evt => {\n      const {\n        name,\n        value\n      } = evt.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmitFrom = evt => {\n      evt.preventDefault();\n      const form = evt.currentTarget;\n      this.props.submitForm(this.state);\n      form.reset();\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: css.contactForm,\n      onSubmit: this.onSubmitFrom,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: css.formLabel,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.contactInput,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: css.formLabel,\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.contactInput,\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        placeholder: \"Enter number\",\n        value: number,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: css.formButton,\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nContactForm.propTypes = {\n  submitForm: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["PropTypes","css","Component","ContactForm","state","name","number","handleChange","evt","value","target","setState","onSubmitFrom","preventDefault","form","currentTarget","props","submitForm","reset","render","contactForm","formLabel","contactInput","formButton","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADiC;;AAAA,SAMzCC,YANyC,GAM1BC,GAAG,IAAI;AACpB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,GAAG,CAACE,MAA5B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACD,KATwC;;AAAA,SAWzCG,YAXyC,GAW1BJ,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACK,cAAJ;AACA,YAAMC,IAAI,GAAGN,GAAG,CAACO,aAAjB;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKb,KAA3B;AACAU,MAAAA,IAAI,CAACI,KAAL;AACA,WAAKP,QAAL,CAAc;AACZN,QAAAA,IAAI,EAAE,EADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KApBwC;AAAA;;AAqBzCa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACE;AAAM,MAAA,SAAS,EAAEH,GAAG,CAACmB,WAArB;AAAkC,MAAA,QAAQ,EAAI,KAAKR,YAAnD;AAAA,8BACE;AAAO,QAAA,SAAS,EAAEX,GAAG,CAACoB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,SAAS,EAAEpB,GAAG,CAACqB,YADf;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,OAAO,EAAC,wHAJV;AAKE,QAAA,KAAK,EAAC,wIALR;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,WAAW,EAAC,YAPd;AAQE,QAAA,KAAK,EAAEjB,IART;AASE,QAAA,QAAQ,EAAE,KAAKE;AATjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAO,QAAA,SAAS,EAAEN,GAAG,CAACoB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AACC,QAAA,SAAS,EAAEpB,GAAG,CAACqB,YADhB;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAC,wFAJV;AAKE,QAAA,KAAK,EAAC,8FALR;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,WAAW,EAAC,cAPd;AAQE,QAAA,KAAK,EAAEhB,MART;AASE,QAAA,QAAQ,EAAE,KAAKC;AATjB;AAAA;AAAA;AAAA;AAAA,cAdF,eAyBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEN,GAAG,CAACsB,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAtDwC;AAyD3CpB,WAAW,CAACqB,SAAZ,GAAwB;AACpBP,EAAAA,UAAU,EAAEjB,SAAS,CAACyB,IAAV,CAAeC;AADP,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\nimport { Component } from 'react';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmitFrom = evt => {\r\n    evt.preventDefault();\r\n    const form = evt.currentTarget;\r\n    this.props.submitForm(this.state);\r\n    form.reset();\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={css.contactForm} onSubmit = {this.onSubmitFrom}>\r\n        <label className={css.formLabel}>Name</label>\r\n        <input\r\n        className={css.contactInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className={css.formLabel}>Number</label>\r\n        <input\r\n         className={css.contactInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"Enter number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\" className={css.formButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    submitForm: PropTypes.func.isRequired,\r\n}"]},"metadata":{},"sourceType":"module"}